{"version":3,"sources":["webpack:///./src/views/Resultados/Estadisticas.vue","webpack:///./src/services/estadisticas/ListarEstadisticasAgupadasService.ts","webpack:///./src/services/estadisticas/ListarEstadisticasCriticasAgrupadasService.ts","webpack:///./src/views/Resultados/Estadisticas.vue?9601"],"names":["class","style","successData","successDataResultados","nombreEncuesta","cantidadEncuestasCulminadas","cantidadEncuestasTotales","estadisticasGenero","data","labels","length","id","type","options","widthEstadisticasEdad","estadisticasEdad","widthEstadisticasCentroEducativo","estadisticasCentroEducativo","widthEstadisticasDistrito","estadisticasDistrito","sumatoriaAlternativasCriticasPorGenero","estadisticasCriticasGenero","widthEstadisticasEdadCriticas","estadisticasCriticasEdad","widthEstadisticasDistritoCriticas","estadisticasCriticasDistrito","api","Api","serviceResponse","ServiceResponse","errorHandler","ErrorHandler","listar","params","Promise","this","responseCode","responseMessage","error","response","handlerErrorResponse","status","request","handlerErrorRequest","components","Vue3ChartJs","Loading","routeParam","async","value","String","route","response1","listarEstadisticasAgrupadasPorGenero","response2","listarEstadisticasAgrupadasPorEdad","response3","listarEstadisticasAgrupadasPorCentroEducativo","response4","listarEstadisticasAgrupadasPorDistrito","response5","listarEstadisticasCriticasAgrupadasPorGenero","response6","listarEstadisticasCriticasAgrupadasPorEdad","response7","listarEstadisticasCriticasAgrupadasPorDistrito","all","listarEstadisticasAgrupadasService","listarEstadisticasCriticasAgrupadasService","obtenerAnchoCajaEstadistica","longitudArray","limiteArray","encuestaId","groupBy","push","exito","array","forEach","item","responsive","plugins","legend","position","usePointStyle","datasets","backgroundColor","scales","y","ticks","stepSize","indexAxis","x","display","data1","data2","label","stacked","elements","__exports__","render"],"mappings":"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","file":"js/chunk-2d22c4e6.2379c29b.js","sourcesContent":["<template>\r\n    <div>\r\n        <Loading v-if=\"!successData || !successDataResultados\" />\r\n        <div class=\"o-resultados-container\" v-else>\r\n            <div class=\"a-title\">Estadísticas</div>\r\n            <div class=\"a-title--sm\">{{ nombreEncuesta }}</div>\r\n            <div class=\"a-divider\"></div>\r\n\r\n            <div class=\"g-estadisticas\">\r\n                <div class=\"g-estadisticas__grafica-1\">\r\n                     <div class=\"m-card\">\r\n                        <div class=\"m-card__body\">\r\n                            <div class=\"a-statics\">\r\n                                <div class=\"a-statics__text\">Encuestas culminadas</div>\r\n                                <div class=\"a-statics__number\">{{ cantidadEncuestasCulminadas }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               \r\n                <div class=\"g-estadisticas__grafica-2\">\r\n                    <div class=\"m-card\">\r\n                        <div class=\"m-card__body\">\r\n                            <div class=\"a-statics\">\r\n                                <div class=\"a-statics__text\">Encuestas totales</div>\r\n                                <div class=\"a-statics__number\">{{ cantidadEncuestasTotales }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n\r\n\r\n                <div class=\"g-estadisticas__grafica-3\">\r\n                    <div class=\"m-card-statics\" style=\"height: auto;\">\r\n                        <div class=\"m-card-statics__header\">\r\n                            Género\r\n                        </div>\r\n                        <div class=\"m-card-statics__body u-align-center\">\r\n                            <vue3-chart-js v-if=\"estadisticasGenero.data.labels.length > 0\"\r\n                                :id=\"estadisticasGenero.id\"\r\n                                :type=\"estadisticasGenero.type\"\r\n                                :data=\"estadisticasGenero.data\"\r\n                                :options=\"estadisticasGenero.options\"\r\n                            />\r\n                            <div v-else class=\"a-box-no-data\">\r\n                                <p>No hay datos</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"g-estadisticas__grafica-4\">\r\n                    <div class=\"m-card-statics\">\r\n                        <div class=\"m-card-statics__header\">\r\n                            Edad\r\n                        </div>\r\n                        <div class=\"m-card-statics__body\" :style=\"'width: ' + widthEstadisticasEdad + 'px;'\">\r\n                            <div class=\"m-card-statics__content\">\r\n                                <vue3-chart-js v-if=\"estadisticasEdad.data.labels.length > 0\"\r\n                                    :id=\"estadisticasEdad.id\"\r\n                                    :type=\"estadisticasEdad.type\"\r\n                                    :data=\"estadisticasEdad.data\"\r\n                                    :options=\"estadisticasEdad.options\"\r\n                                />\r\n                                <div v-else class=\"a-box-no-data\">\r\n                                    <p>No hay datos</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"g-estadisticas__grafica-5\">\r\n                    <div class=\"m-card-statics\">\r\n                        <div class=\"m-card-statics__header\">\r\n                            Centro educativo\r\n                        </div>\r\n                        <div class=\"m-card-statics__body\" :style=\"'width: ' + widthEstadisticasCentroEducativo + 'px;'\">\r\n                            <vue3-chart-js v-if=\"estadisticasCentroEducativo.data.labels.length > 0\"\r\n                                :id=\"estadisticasCentroEducativo.id\"\r\n                                :type=\"estadisticasCentroEducativo.type\"\r\n                                :data=\"estadisticasCentroEducativo.data\"\r\n                                :options=\"estadisticasCentroEducativo.options\"\r\n                            />\r\n                            <div v-else class=\"a-box-no-data\">\r\n                                <p>No hay datos</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"g-estadisticas__grafica-6\">\r\n                    <div class=\"m-card-statics\">\r\n                        <div class=\"m-card-statics__header\">\r\n                            Distrito\r\n                        </div>\r\n                        <div class=\"m-card-statics__body\" :style=\"'width: ' + widthEstadisticasDistrito + 'px;'\">\r\n                \r\n                            <vue3-chart-js v-if=\"estadisticasDistrito.data.labels.length > 0\"\r\n                                :id=\"estadisticasDistrito.id\"\r\n                                :type=\"estadisticasDistrito.type\"\r\n                                :data=\"estadisticasDistrito.data\"\r\n                                :options=\"estadisticasDistrito.options\"\r\n                            />\r\n                            <div v-else class=\"a-box-no-data\">\r\n                                <p>No hay datos</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"g-estadisticas__grafica-7\">\r\n                    <div class=\"m-card-statics\">\r\n                        <div class=\"m-card-statics__header\">\r\n                            Respuestas críticas por género\r\n                        </div>\r\n                        <div class=\"m-card-statics__body\">\r\n            \r\n                                <vue3-chart-js v-if=\"sumatoriaAlternativasCriticasPorGenero > 0\"\r\n                                    :id=\"estadisticasCriticasGenero.id\"\r\n                                    :type=\"estadisticasCriticasGenero.type\"\r\n                                    :data=\"estadisticasCriticasGenero.data\"\r\n                                    :options=\"estadisticasCriticasGenero.options\"\r\n                                />\r\n                                <div v-else class=\"a-box-no-data\">\r\n                                    <p>No hay datos</p>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"m-card-statics\">\r\n                    <div class=\"m-card-statics__header\">\r\n                        Respuestas críticas por edad\r\n                    </div>\r\n                    <div class=\"m-card-statics__body\" :style=\"'width: ' + widthEstadisticasEdadCriticas + 'px;'\">                          \r\n\r\n                        <vue3-chart-js v-if=\"estadisticasCriticasEdad.data.labels.length > 0\"\r\n                            :id=\"estadisticasCriticasEdad.id\"\r\n                            :type=\"estadisticasCriticasEdad.type\"\r\n                            :data=\"estadisticasCriticasEdad.data\"\r\n                            :options=\"estadisticasCriticasEdad.options\"\r\n                        />\r\n                        <div v-else class=\"a-box-no-data\">\r\n                            <p>No hay datos</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"m-card-statics\">\r\n                    <div class=\"m-card-statics__header\">\r\n                        Respuestas críticas por distrito\r\n                    </div>\r\n                    <div class=\"m-card-statics__body\" :style=\"'width: ' + widthEstadisticasDistritoCriticas + 'px;'\">\r\n\r\n                        <vue3-chart-js v-if=\"estadisticasCriticasDistrito.data.labels.length > 0\"\r\n                            :id=\"estadisticasCriticasDistrito.id\"\r\n                            :type=\"estadisticasCriticasDistrito.type\"\r\n                            :data=\"estadisticasCriticasDistrito.data\"\r\n                            :options=\"estadisticasCriticasDistrito.options\"\r\n                        />\r\n                        <div v-else class=\"a-box-no-data\">\r\n                            <p>No hay datos</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"js\">\r\nimport Loading from '@/components/Loading.vue';\r\nimport Vue3ChartJs from '@j-t-mcc/vue3-chartjs';\r\nimport { defineComponent, ref, onMounted, inject } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport { ListarEstadisticasAgrupadasService } from '@/services/estadisticas/ListarEstadisticasAgupadasService';\r\nimport { ListarEstadisticasCriticasAgrupadasService } from '@/services/estadisticas/ListarEstadisticasCriticasAgrupadasService';\r\n// import { ValidatorVerEncuestaService } from '@/services/validator/ValidatorVerEncuestaService';\r\n// import { UsuarioLogueado } from '@/types/UsuarioLogueado';\r\n// import { Redirect } from '@/router/redirect';\r\n\r\nexport default defineComponent({\r\n\r\n    components: {\r\n        Vue3ChartJs,\r\n        Loading\r\n    },\r\n\r\n    setup() {\r\n\r\n        const routeParam = ref(\"\");\r\n\r\n        onMounted(async () => {\r\n\r\n            routeParam.value = String(route.params.id);\r\n\r\n            // const params = {\r\n            //     encuestaId: routeParam.value,\r\n            //     psicologoId: String(usuarioLogueado.usuarioId)\r\n            // }\r\n\r\n            // const isAutorizado = await validatorVerEncuestaService.validar(params);\r\n\r\n            // if (!isAutorizado) {\r\n            //     redirect.redirectToPrincipal(usuarioLogueado.rolId);\r\n            //     return;\r\n            // }\r\n\r\n            const response1 = listarEstadisticasAgrupadasPorGenero();\r\n            const response2 = listarEstadisticasAgrupadasPorEdad();\r\n            const response3 = listarEstadisticasAgrupadasPorCentroEducativo();\r\n            const response4 = listarEstadisticasAgrupadasPorDistrito();\r\n            const response5 = listarEstadisticasCriticasAgrupadasPorGenero();\r\n            const response6 = listarEstadisticasCriticasAgrupadasPorEdad();\r\n            const response7 = listarEstadisticasCriticasAgrupadasPorDistrito();\r\n\r\n            await Promise.all([response1, response2, response3, response4, response5, response6, response7]);\r\n            successData.value = true;\r\n        });\r\n\r\n        const successDataResultados = inject('successDataResultados', ref(false));\r\n\r\n        // const validatorVerEncuestaService = new ValidatorVerEncuestaService();\r\n        // const usuarioLogueado = new UsuarioLogueado();\r\n        // const redirect = new Redirect();\r\n\r\n        const route = useRoute();\r\n        const successData = ref(false);\r\n        const listarEstadisticasAgrupadasService = new ListarEstadisticasAgrupadasService();\r\n        const listarEstadisticasCriticasAgrupadasService = new ListarEstadisticasCriticasAgrupadasService();\r\n\r\n        const estadisticasGenero = ref({});\r\n        const estadisticasEdad = ref({});\r\n        const estadisticasCentroEducativo = ref({});\r\n        const estadisticasDistrito = ref({});\r\n        const estadisticasCriticasGenero = ref({});\r\n        const estadisticasCriticasEdad = ref({});\r\n        const estadisticasCriticasDistrito = ref({});\r\n        const sumatoriaAlternativasCriticasPorGenero = ref(0);\r\n\r\n        const widthEstadisticasEdad = ref(450);\r\n        const widthEstadisticasCentroEducativo = ref(450);\r\n        const widthEstadisticasDistrito = ref(450);\r\n        const widthEstadisticasEdadCriticas = ref(450);\r\n        const widthEstadisticasDistritoCriticas = ref(450);\r\n\r\n        const cantidadEncuestasCulminadas = inject('cantidadEncuestasCulminadas', ref(0));\r\n        const cantidadEncuestasTotales = inject('cantidadEncuestasTotales', ref(0));\r\n        const nombreEncuesta = inject('nombreEncuesta', ref(''));\r\n\r\n        function obtenerAnchoCajaEstadistica(longitudArray, limiteArray)\r\n        {\r\n            if (longitudArray > limiteArray )\r\n            {\r\n                return (longitudArray - limiteArray) * 40;\r\n            }\r\n        }\r\n\r\n        //ESTADISTICAS POR GENERO\r\n        async function listarEstadisticasAgrupadasPorGenero()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"genero\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasAgrupadasService.listar(params);\r\n            \r\n            let labels = [];\r\n            labels.push('Item 1');\r\n            labels.push('Item 2');\r\n\r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let data = [];\r\n\r\n                array.forEach(item => {\r\n                    // labels.push(item['generoDescripcion']);\r\n                    data.push(item['cantidad']);\r\n                });\r\n\r\n                estadisticasGenero.value = {\r\n                    id: 'genero',\r\n                    type: 'pie',\r\n                    options: {\r\n                        responsive: false,\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                                labels: {\r\n                                    usePointStyle: true,\r\n                                },\r\n                            }\r\n                        }\r\n                    },\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: [\r\n                                    '#0B99A3', //\r\n                                    '#FB6E65',\r\n                                    '#FDCA5B'\r\n                                ],\r\n                                data: data\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        // ESTADISTICAS POR EDAD\r\n        async function listarEstadisticasAgrupadasPorEdad()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"edad\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['edad']);\r\n                    data.push(item['cantidad']);\r\n                });\r\n\r\n                widthEstadisticasEdad.value+= obtenerAnchoCajaEstadistica(array.length, 10);\r\n\r\n                estadisticasEdad.value = {\r\n                    id: 'edad',\r\n                    type: 'bar',\r\n                    options: {\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: false\r\n                        },\r\n                        scales: {\r\n                            y: {\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: [\r\n                                    '#0B99A3'\r\n                                ],\r\n                                data: data\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // ESTADISTICAS POR CENTRO EDUCATIVO\r\n        async function listarEstadisticasAgrupadasPorCentroEducativo()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"centroEducativo\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['centroEducativo']);\r\n                    data.push(item['cantidad']);\r\n                });\r\n\r\n                widthEstadisticasCentroEducativo.value+= obtenerAnchoCajaEstadistica(array.length, 10);\r\n\r\n                estadisticasCentroEducativo.value = {\r\n                    id: 'centroEducativo',\r\n                    type: 'bar',\r\n                    options: {\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: false\r\n                        },\r\n                        scales: {\r\n                            y: {\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: [\r\n                                    '#FB6E65'\r\n                                ],\r\n                                data: data\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // ESTADISTICAS POR DISTRITO\r\n        async function listarEstadisticasAgrupadasPorDistrito()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"distrito\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['distritoNombre']);\r\n                    data.push(item['cantidad']);\r\n                });\r\n\r\n                // if (item['cantidad'] > 20 )\r\n                // {\r\n                //     widthEstadisticasDistrito.value+= (item['cantidad'] - 20) * 30;\r\n                // }\r\n\r\n                widthEstadisticasDistrito.value+= obtenerAnchoCajaEstadistica(array.length, 5);\r\n\r\n                estadisticasDistrito.value = {\r\n                    id: 'distrito',\r\n                    type: 'bar',\r\n                    options: {\r\n                        indexAxis: 'y',\r\n                        // elements: {\r\n                        //     bar: {\r\n                        //         borderWidth: 2,\r\n                        //     }\r\n                        // },\r\n                        responsive: true,\r\n                        plugins: {\r\n                            legend: false\r\n                        },\r\n                        scales: {\r\n                            x: {\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            },\r\n                            y: {\r\n                                display: true,\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: [\r\n                                    '#FDCA5B'\r\n                                ],\r\n                                data: data\r\n                            }\r\n                        ]\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //ESTADISTICAS CRITICAS POR GENERO\r\n        async function listarEstadisticasCriticasAgrupadasPorGenero()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"genero\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasCriticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data1 = [];\r\n                let data2 = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['generoDescripcion']);\r\n                    data1.push(item['alternativa3']);\r\n                    data2.push(item['alternativa4']);\r\n\r\n                    sumatoriaAlternativasCriticasPorGenero.value+= item['alternativa3'] + item['alternativa4'];\r\n                });\r\n\r\n                estadisticasCriticasGenero.value = {\r\n                    id: 'generoCriticas',\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Con frecuencia',\r\n                                data: data1,\r\n                                backgroundColor: '#FB6E65',\r\n                            },\r\n                            {\r\n                                label: 'Con mucha frecuencia',\r\n                                data: data2,\r\n                                backgroundColor: '#0B99A3',\r\n                            }\r\n                        ]\r\n                    },\r\n                    options: {\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                                labels: {\r\n                                    usePointStyle: true,\r\n                                },\r\n                            },\r\n                        },\r\n                        responsive: true,\r\n                        scales: {\r\n                            x: {\r\n                                stacked: true,\r\n                            },\r\n                            y: {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //ESTADISTICAS CRITICAS POR EDAD\r\n        async function listarEstadisticasCriticasAgrupadasPorEdad()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"edad\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasCriticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data1 = [];\r\n                let data2 = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['edad']);\r\n                    data1.push(item['alternativa3']);\r\n                    data2.push(item['alternativa4']);\r\n                });\r\n\r\n                widthEstadisticasEdadCriticas.value+= obtenerAnchoCajaEstadistica(array.length, 10);\r\n\r\n                estadisticasCriticasEdad.value = {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Con frecuencia',\r\n                                data: data1,\r\n                                backgroundColor: '#FB6E65',\r\n                            },\r\n                            {\r\n                                label: 'Con mucha frecuencia',\r\n                                data: data2,\r\n                                backgroundColor: '#0B99A3',\r\n                            }\r\n                        ]\r\n                    },\r\n                    options: {\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                                labels: {\r\n                                    usePointStyle: true,\r\n                                },\r\n                            },\r\n                        },\r\n                        responsive: true,\r\n                        scales: {\r\n                            x: {\r\n                                stacked: true,\r\n                            },\r\n                            y: {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    stepSize: 2\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //ESTADISTICAS CRITICAS POR DISTRITO\r\n        async function listarEstadisticasCriticasAgrupadasPorDistrito()\r\n        {\r\n            const params = {\r\n                encuestaId: routeParam.value,\r\n                groupBy: \"distrito\"\r\n            }\r\n\r\n            const serviceResponse = await listarEstadisticasCriticasAgrupadasService.listar(params);\r\n            \r\n            if (serviceResponse.exito())\r\n            {\r\n                const array = serviceResponse.data['estadisticas'];\r\n                let labels = [];\r\n                let data1 = [];\r\n                let data2 = [];\r\n\r\n                array.forEach(item => {\r\n                    labels.push(item['distritoNombre']);\r\n                    data1.push(item['alternativa3']);\r\n                    data2.push(item['alternativa4'])\r\n                });\r\n\r\n                widthEstadisticasDistritoCriticas.value+= obtenerAnchoCajaEstadistica(array.length, 6);\r\n\r\n                estadisticasCriticasDistrito.value = {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: labels,\r\n                        datasets: [\r\n                            {\r\n                                label: 'Con frecuencia',\r\n                                data: data1,\r\n                                backgroundColor: '#FB6E65',\r\n                            },\r\n                            {\r\n                                label: 'Con mucha frecuencia',\r\n                                data: data2,\r\n                                backgroundColor: '#0B99A3',\r\n                            }\r\n                        ]\r\n                    },\r\n                    options: {\r\n                        plugins: {\r\n                            legend: {\r\n                                position: 'top',\r\n                                labels: {\r\n                                    usePointStyle: true,\r\n                                },\r\n                            },\r\n                        },\r\n                        indexAxis: 'y',\r\n                        elements: {\r\n                            // bar: {\r\n                            //     borderWidth: 2,\r\n                            // }\r\n                        },\r\n                        // responsive: true,\r\n                        scales: {\r\n                            x: {\r\n                                stacked: true,\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            },\r\n                            y: {\r\n                                stacked: true\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            successData,\r\n            estadisticasGenero,\r\n            estadisticasEdad,\r\n            estadisticasCentroEducativo,\r\n            estadisticasDistrito,\r\n            estadisticasCriticasGenero,\r\n            estadisticasCriticasEdad,\r\n            estadisticasCriticasDistrito,\r\n            sumatoriaAlternativasCriticasPorGenero,\r\n            widthEstadisticasEdad,\r\n            widthEstadisticasDistrito,\r\n            widthEstadisticasCentroEducativo,\r\n            widthEstadisticasEdadCriticas,\r\n            widthEstadisticasDistritoCriticas,\r\n            nombreEncuesta,\r\n            cantidadEncuestasCulminadas,\r\n            cantidadEncuestasTotales,\r\n            successDataResultados\r\n        }\r\n    },\r\n})\r\n</script>\r\n","import axios from 'axios';\r\nimport { Api } from '../Api';\r\nimport { ErrorHandler } from '../ErrorHandler';\r\nimport { ServiceResponse } from '../ServiceResponse';\r\n\r\ninterface ListarEstadisticasAgrupadasParams {\r\n    encuestaId : string,\r\n    groupBy : string\r\n}\r\n\r\nexport class ListarEstadisticasAgrupadasService {\r\n\r\n    private api: Api = new Api();\r\n    private serviceResponse: ServiceResponse = new ServiceResponse();\r\n    private errorHandler: ErrorHandler = new ErrorHandler();\r\n\r\n    public async listar(params: ListarEstadisticasAgrupadasParams): Promise<ServiceResponse> \r\n    {\r\n        try {\r\n            // const response: any = await axios.post(this.api.getBaseUrl() + `/estadisticas/listarEstadisticasAgrupadas`, params, this.api.getAuthorization());\r\n            // const data: any = response['data'];\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"estadisticas\": [\r\n                        {\r\n                            \"idEncuesta\": 70,\r\n                            \"distritoId\": 35,\r\n                            \"distritoNombre\": \"Lurín\",\r\n                            \"cantidad\": 2\r\n                        },\r\n                        {\r\n                            \"idEncuesta\": 70,\r\n                            \"distritoId\": 18,\r\n                            \"distritoNombre\": \"Magdalena del Mar\",\r\n                            \"cantidad\": 1\r\n                        }\r\n                    ]\r\n                },\r\n                \"responseCode\": 0,\r\n                \"responseMessage\": \"ÉXITO\"\r\n            }\r\n\r\n            this.serviceResponse.data = data['data'];\r\n            this.serviceResponse.responseCode = data['responseCode'];\r\n            this.serviceResponse.responseMessage = data['responseMessage'];\r\n\r\n            return this.serviceResponse;\r\n\r\n        } catch (error) {\r\n          \r\n            if (error.response) \r\n            {\r\n                this.errorHandler.handlerErrorResponse(error.response.status);\r\n            }\r\n            else if (error.request)\r\n            {\r\n                this.errorHandler.handlerErrorRequest();\r\n            }\r\n        }\r\n\r\n        return this.serviceResponse;\r\n    }\r\n}","import axios from 'axios';\r\nimport { Api } from '../Api';\r\nimport { ErrorHandler } from '../ErrorHandler';\r\nimport { ServiceResponse } from '../ServiceResponse';\r\n\r\ninterface ListarEstadisticasCriticasAgrupadasParams {\r\n    encuestaId : string,\r\n    groupBy : string\r\n}\r\n\r\nexport class ListarEstadisticasCriticasAgrupadasService {\r\n\r\n    private api: Api = new Api();\r\n    private serviceResponse: ServiceResponse = new ServiceResponse();\r\n    private errorHandler: ErrorHandler = new ErrorHandler();\r\n\r\n    public async listar(params: ListarEstadisticasCriticasAgrupadasParams): Promise<ServiceResponse> \r\n    {\r\n        try {\r\n            // const response: any = await axios.post(this.api.getBaseUrl() + `/estadisticas/listarEstadisticasCriticasAgrupadas`, params, this.api.getAuthorization());\r\n            // const data: any = response['data'];\r\n\r\n            const data = {\r\n                \"data\": {\r\n                    \"estadisticas\": [\r\n                        {\r\n                            \"encuestaId\": 70,\r\n                            \"distritoId\": 35,\r\n                            \"distritoNombre\": \"Lurín\",\r\n                            \"alternativa3\": 2,\r\n                            \"alternativa4\": 2\r\n                        },\r\n                        {\r\n                            \"encuestaId\": 70,\r\n                            \"distritoId\": 18,\r\n                            \"distritoNombre\": \"Magdalena del Mar\",\r\n                            \"alternativa3\": 2,\r\n                            \"alternativa4\": 2\r\n                        }\r\n                    ]\r\n                },\r\n                \"responseCode\": 0,\r\n                \"responseMessage\": \"ÉXITO\"\r\n            }\r\n\r\n            this.serviceResponse.data = data['data'];\r\n            this.serviceResponse.responseCode = data['responseCode'];\r\n            this.serviceResponse.responseMessage = data['responseMessage'];\r\n\r\n            return this.serviceResponse;\r\n\r\n        } catch (error) {\r\n            \r\n            if (error.response) \r\n            {\r\n                this.errorHandler.handlerErrorResponse(error.response.status);\r\n            }\r\n            else if (error.request)\r\n            {\r\n                this.errorHandler.handlerErrorRequest();\r\n            }\r\n        }\r\n\r\n        return this.serviceResponse;\r\n    }\r\n}","import { render } from \"./Estadisticas.vue?vue&type=template&id=2f09fa0f\"\nimport script from \"./Estadisticas.vue?vue&type=script&lang=js\"\nexport * from \"./Estadisticas.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\Proyectos con Victor Armas\\\\paep\\\\src\\\\paep-vue-demo\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}